<sdk:Page x:Class="TestApplication.Tests.AnimationTest" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           mc:Ignorable="d"
           xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk">

    <sdk:Page.Resources>
        <Storyboard x:Key="TestStoryboard" Duration="0:0:1">
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
        </Storyboard>
        <Storyboard x:Key="TestStoryboard2" Duration="0:0:1">
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestBorder2" Storyboard.TargetProperty="(Border.Background).Color"/>
        </Storyboard>
        <Storyboard x:Key="TestStoryboard3" Duration="0:0:1">
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestButton" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"/>
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestButton" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
        </Storyboard>
        <Storyboard x:Key="TestStoryboard4" Duration="0:0:1">
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestButton2" Storyboard.TargetProperty="(Control.Background).Color"/>
            <ColorAnimation Duration="0:0:1" Storyboard.TargetName="TestButton2" Storyboard.TargetProperty="(Control.Foreground).Color"/>
        </Storyboard>
        <Style x:Key="TestButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" From="50" To="0" Duration="0:0:1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" From="50" To="100" Duration="0:0:1" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle2" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle3" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle4" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle5" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle6" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuarticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuarticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle7" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle8" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="0" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Border" To="100" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" RenderTransform="{TemplateBinding RenderTransform}" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButtonStyle9" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="LightBlue"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Border" To="360" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Border" To="200" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" RenderTransformOrigin="0,0" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Border.RenderTransform>
                                    <CompositeTransform/>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TestObjectAnimationUsingKeyFramesStyle1" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Supprimer pour l'instant le TargetType -->
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                    </VisualState>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Green"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="Orange"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="Yellow"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="LightBlue"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                    </VisualState>
                                    <VisualState Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Grid>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </sdk:Page.Resources>
    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
            <StackPanel Background="LightYellow" HorizontalAlignment="Left">
                <TextBlock Text="ColorAnimation through Storyboard:" FontWeight="Bold" Margin="2,2,2,7"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Border; Color; binding Background:"/>
                    <Grid Width="50" Height="20">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Border x:Name="TestBorder" Background="Black" Width="50" Height="20"/>
                    </Grid>
                    <Grid Width="50" Height="20" Margin="2">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Border Background="{Binding Path=Background, ElementName=TestBorder}" Width="50" Height="20"/>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Border; Background; From too; binding Background:"/>
                    <Grid Width="50" Height="20" Margin="5">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Border x:Name="TestBorder2" Background="Black" Width="50" Height="20"/>
                    </Grid>
                    <Grid Width="50" Height="20" Margin="2">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Border Background="{Binding Path=Background, ElementName=TestBorder2}" Width="50" Height="20"/>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Button; Color:"/>
                    <Grid Width="50" Height="30" Margin="5">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Button x:Name="TestButton" Content="Yay" Width="50" Height="30"/>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Button; Background:"/>
                    <Grid Width="50" Height="30" Margin="5">
                        <Border Background="Black" Width="25" Height="20"/>
                        <Button x:Name="TestButton2" Content="Yay" Width="50" Height="30"/>
                    </Grid>
                </StackPanel>
                <Button x:Name="TestButton3" Content="Test ColorAnimations" BorderBrush="Black" BorderThickness="1" Click="ButtonTestAnimations_Click"/>
            </StackPanel>
            <StackPanel Background="WhiteSmoke">
                <TextBlock Text="DoubleAnimation through VisualStateManager:" TextWrapping="Wrap" FontWeight="Bold" Margin="2,2,2,7"/>

                <Button Content="Linear" Style="{StaticResource TestButtonStyle1}"/>
                <Button Content="Circle" Style="{StaticResource TestButtonStyle2}"/>
                <Button Content="Cubic" Style="{StaticResource TestButtonStyle3}"/>
                <Button Content="Exponential" Style="{StaticResource TestButtonStyle4}"/>
                <Button Content="Quadratic" Style="{StaticResource TestButtonStyle5}"/>
                <Button Content="Quartic" Style="{StaticResource TestButtonStyle6}"/>
                <Button Content="Quintic" Style="{StaticResource TestButtonStyle7}"/>
                <Button Content="Sine" Style="{StaticResource TestButtonStyle8}"/>
                <Button Content="Weeee!" Style="{StaticResource TestButtonStyle9}"/>
            </StackPanel>
            <StackPanel>
                <Button Content="Oooh! Pretty!" Style="{StaticResource TestObjectAnimationUsingKeyFramesStyle1}"/>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</sdk:Page>
